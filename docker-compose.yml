version: '3.8'

services:
  # PostgreSQL Database with Authentication Tables
  postgres:
    image: postgres:15-alpine
    container_name: inventory_postgres
    environment:
      POSTGRES_DB: inventory_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gugan@2022
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/auth_models.py:/docker-entrypoint-initdb.d/01-auth-schema.sql
      - ./init_database.sql:/docker-entrypoint-initdb.d/02-init-data.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d inventory_management"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres 
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c work_mem=8MB

  # FastAPI Backend with Secure Authentication
  backend:
    build: .
    container_name: inventory_backend
    environment:
      - DATABASE_URL=postgresql://postgres:gugan@2022@postgres:5432/inventory_management
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=inventory_management
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=gugan@2022
      - POSTGRES_PORT=5432
      - PYTHONPATH=/app/backend
      - CORS_ORIGINS=http://localhost:5173,http://localhost:3001,http://frontend:5173
      - JWT_SECRET_KEY=inventory-college-system-super-secret-key-2025
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=College@2025
      - ADMIN_EMAIL=admin@college.edu
    volumes:
      - ./backend/uploads:/app/backend/uploads
      - ./sample_invoices:/app/sample_invoices
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/auth/health || http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # React Frontend with Authentication UI
  frontend:
    image: node:18-alpine
    container_name: inventory_frontend
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    deploy:
      resources:
        limits:
          memory: 1G

volumes:
  postgres_data:
    driver: local
